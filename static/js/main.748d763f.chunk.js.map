{"version":3,"sources":["smart-contract/abi/AccountabilityChecker.js","smart-contract/contracts.js","smart-contract/abi/AccountabilityCheckerFactory.js","utils/functions.js","contexts/Web3Interface/ContractGetterFunctions.js","contexts/Web3Interface/index.js","components/RequirementsGate.js","pages/_layout.js","components/Loader.js","components/TransactionResultScreen.js","pages/Cashout.js","components/ExchangeRates.js","components/PromiseDefinitionForm.js","utils/Validation/PromiseDefintion.js","pages/CreatePromise.js","pages/CreateContract.js","pages/Start.js","pages/Nominate.js","components/PotTotals.js","pages/CheckIn.js","pages/NotFound.js","Routes.js","reportWebVitals.js","index.js"],"names":["AccountabilityCheckerABI","anonymous","inputs","indexed","internalType","name","type","outputs","stateMutability","constant","payable","web3","Web3","givenProvider","AccountabilityContractFactory","eth","Contract","process","utils","isAddress","toBN","asciiToHex","hexToUtf8","as2DecimalPlace","amount","Math","round","toFixed","isValidNonEmptyAddress","address","isZero","getNominee","AccountabilityCheckerContractInstance","a","methods","nominee_account","call","getIsPromiseActive","isPromiseActive","getContractOwner","owner","getPromiseDeadline","promise_deadline","getCheckOpen","check_open","getCheckClose","check_closed","ethereum","window","Web3Interface","createContext","defaultActiveUserData","walletAddress","contractAddresses","defaultActiveContractData","nominatedAddress","promiseDeadline","checkOpen","checkClose","Web3InterfaceProvider","children","useState","isLoading","setIsLoading","activeUserData","setActiveUserData","selectedContract","setSelectedContract","on","accounts","forgetUserAccount","useEffect","retrivedUser","getUserAccount","request","method","newState","localStorage","removeItem","setItem","JSON","stringify","retrivedUserData","getItem","parse","then","createACContract","createContract","send","from","error","receipt","console","results","data","transactionHash","events","getUserACContracts","findMyContracts","foundContracts","length","setActiveACContractData","contractAddress","AccountabilityCheckerContract","_address","instance","setNominatedAccount","setNominee","createPromise","transactionData","commitments","dailyWager","deadline","totalPledgeAmount","activatePromise","value","updatePromiseData","log","getPromisePrivateData","getPromiseDetails","response1","getPotsDetails","response2","checks_left","commitmentsAsHex","pledgePot","rewardPot","penaltyPot","map","commitment","removeFinalCheckinTimes","submitPromiseCheckIn","checkInResult","timeNow","dayjs","unix","checkCommitments","cashoutPromise","cashOut","Provider","userData","contractData","dAPPFunctions","getAccount","forgetAccount","contractFactoryFunctions","getContracts","contractFunctions","selectContract","submitCheckIn","RequirementsGate","isValid","message","nohomepage","to","extend","localizedFormat","Layout","useContext","activeContractData","setActiveContractData","hasProvider","sethasProvider","checkForProvider","params","detectEthereumProvider","className","format","onClick","icon","faFile","size","id","disabled","onChange","event","target","defaultValue","hidden","contract","index","faRetweet","faFileDownload","Loader","color","height","width","TransactionResultScreen","success","Cashout","isFunctionLoading","setIsFunctionLoading","setTransactionData","handleSubmit","cashOutSummary","ExchangeRates","fiatExhangeRates","setFiatExhangeRates","queryAmount","Number","fetch","response","json","rates","GBP","USD","EUR","fetchExchangeRate","DateDropdown","rows","push","PromiseDefinitionForm","handleSubmitForm","handleUpdateData","userPromiseData","calculatedDeadline","undefined","promiseTimingsFormatted","setPromiseTimingsFormatted","deadlineAsDaysAway","add","onSubmit","userCommitments","newData","splice","min","step","userResponseSchema","Joi","object","array","items","string","required","number","less","positive","greater","toWei","hex","CreatePromise","Array","fill","userPromise","setUserPromise","setError","preventDefault","validate","filter","word","transactionArguments","padEnd","toString","property","CreateContract","Start","Nominate","newNominee","setNewNominee","isTxnLoading","setIsTxnLoading","handleTxnSubmit","fromWei","PotTotals","pots","pot","Object","values","faArchive","keys","defaultPromiseData","CheckIn","userResponse","setUserResponse","promisePrivateData","setPromisePrivateData","_getPromisePrivateData","getPrivatePromiseData","rest","entries","e","checksLeft","hasCompletedAll","every","answer","handleUpdate","checked","htmlFor","NotFound","App","path","element","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.748d763f.chunk.js","sourcesContent":["export const AccountabilityCheckerABI = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"payout\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"penalty\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"sentToOwner\",\n        type: \"bool\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"sentToNominee\",\n        type: \"bool\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"isPromiseActive\",\n        type: \"bool\",\n      },\n    ],\n    name: \"cashOutSummary\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"check_open\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"check_closed\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"checkTimesUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"pledge_pot\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"reward_pot\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"penalty_pot\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"moneyPotUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"nominee_address\",\n        type: \"address\",\n      },\n    ],\n    name: \"nomineeSet\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"days_missed\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"penalty_amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"penaltyApplied\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"bytes32[]\",\n        name: \"commitments\",\n        type: \"bytes32[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"pledge_pot\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"promise_deadline\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"checks_left\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"promiseSet\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"checks_left\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"last_checked\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"submissionAccepted\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"check_closed\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    constant: true,\n  },\n  {\n    inputs: [],\n    name: \"check_open\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    constant: true,\n  },\n  {\n    inputs: [],\n    name: \"contract_creation\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    constant: true,\n  },\n  {\n    inputs: [],\n    name: \"isPromiseActive\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    constant: true,\n  },\n  {\n    inputs: [],\n    name: \"nominee_account\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    constant: true,\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    constant: true,\n  },\n  {\n    inputs: [],\n    name: \"promise_deadline\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"requester\",\n        type: \"address\",\n      },\n    ],\n    name: \"initialize\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"nominee\",\n        type: \"address\",\n      },\n    ],\n    name: \"setNominee\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32[]\",\n        name: \"my_commitments\",\n        type: \"bytes32[]\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"my_wager\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"my_deadline\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"activatePromise\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n    payable: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bool\",\n        name: \"commitments_fulfiled\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"time_submitted\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"checkCommitments\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"cashOut\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n    payable: true,\n  },\n  {\n    inputs: [],\n    name: \"getPromiseDetails\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bytes32[]\",\n        name: \"\",\n        type: \"bytes32[]\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    constant: true,\n  },\n  {\n    inputs: [],\n    name: \"getPotsDetails\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    constant: true,\n  },\n];\n","import Web3 from \"web3\";\n\nimport { AccountabilityCheckerABI } from \"./abi/AccountabilityChecker\";\nimport { AccountabilityCheckerFactoryABI } from \"./abi/AccountabilityCheckerFactory\";\n\nlet web3 = new Web3(Web3.givenProvider);\n\nexport const AccountabilityContractFactory = new web3.eth.Contract(\n  AccountabilityCheckerFactoryABI,\n  process.env.REACT_APP_ACCOUNTABILITY_CHECKER_FACTORY_ADDRESS\n);\n\nexport const createAccountabilityContract = (userAddress) => {\n  return new web3.eth.Contract(AccountabilityCheckerABI, userAddress);\n};\n","export const AccountabilityCheckerFactoryABI = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"deployed_contract\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"log\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"contract_address\",\n        type: \"address\",\n      },\n    ],\n    name: \"newContractCreated\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"contracts_deployed\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    constant: true,\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    constant: true,\n  },\n  {\n    inputs: [],\n    name: \"createContract\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"findMyContracts\",\n    outputs: [\n      {\n        internalType: \"address[]\",\n        name: \"\",\n        type: \"address[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    constant: true,\n  },\n];\n","import Web3 from \"web3\";\nlet web3 = new Web3(Web3.givenProvider);\nlet { isAddress, toBN, asciiToHex, hexToUtf8 } = web3.utils;\n\nexport const as2DecimalPlace = (amount) => {\n  return (Math.round(amount * 100) / 100).toFixed(2);\n};\n\nexport const isValidNonEmptyAddress = (address) => {\n  return !!(isAddress(address) && !toBN(address).isZero());\n};\n\nexport const returnHexArray = (array) => {\n  return array.map((commitment) => {\n    let hex = asciiToHex(commitment);\n    return hex.padEnd(66, \"0\");\n  });\n};\n\nexport const returnUTF8Array = (array) => {\n  return array.map((commitment) => {\n    return hexToUtf8(commitment);\n  });\n};\n","export const getNominee = async (AccountabilityCheckerContractInstance) => {\n  return await AccountabilityCheckerContractInstance.methods\n    .nominee_account()\n    .call();\n};\nexport const getIsPromiseActive = async (\n  AccountabilityCheckerContractInstance\n) => {\n  return await AccountabilityCheckerContractInstance.methods\n    .isPromiseActive()\n    .call();\n};\nexport const getContractOwner = async (\n  AccountabilityCheckerContractInstance\n) => {\n  return await AccountabilityCheckerContractInstance.methods.owner().call();\n};\nexport const getPromiseDeadline = async (\n  AccountabilityCheckerContractInstance\n) => {\n  return await AccountabilityCheckerContractInstance.methods\n    .promise_deadline()\n    .call();\n};\nexport const getCheckOpen = async (AccountabilityCheckerContractInstance) => {\n  return await AccountabilityCheckerContractInstance.methods\n    .check_open()\n    .call();\n};\nexport const getCheckClose = async (AccountabilityCheckerContractInstance) => {\n  return await AccountabilityCheckerContractInstance.methods\n    .check_closed()\n    .call();\n};\n","import dayjs from \"dayjs\";\nimport React, { createContext, useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport { AccountabilityCheckerABI } from \"../../smart-contract/abi/AccountabilityChecker\";\nimport { AccountabilityContractFactory } from \"../../smart-contract/contracts\";\nimport { returnUTF8Array } from \"../../utils/functions\";\nimport {\n  getCheckClose,\n  getCheckOpen,\n  getContractOwner,\n  getPromiseDeadline,\n  getIsPromiseActive,\n  getNominee,\n} from \"./ContractGetterFunctions\";\n\nlet web3 = new Web3(Web3.givenProvider);\nlet { ethereum } = window;\nexport const Web3Interface = createContext();\n\nlet defaultActiveUserData = {\n  walletAddress: null,\n  contractAddresses: [],\n};\n\nlet defaultActiveContractData = {\n  address: null,\n  owner: null,\n  nominatedAddress: null,\n  isPromiseActive: null,\n  promiseDeadline: null,\n  checkOpen: null,\n  checkClose: null,\n};\n\nexport const Web3InterfaceProvider = ({ children }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [activeUserData, setActiveUserData] = useState(defaultActiveUserData);\n  const [selectedContract, setSelectedContract] = useState(\n    defaultActiveContractData\n  );\n\n  ethereum &&\n    ethereum.on(\"accountsChanged\", function (accounts) {\n      if (accounts[0]) forgetUserAccount();\n    });\n\n  useEffect(() => {\n    retrivedUser();\n  }, []);\n\n  const getUserAccount = async () => {\n    let accounts = await ethereum.request({ method: \"eth_requestAccounts\" });\n    if (accounts) {\n      let newState = { walletAddress: accounts[0], contractAddresses: [] };\n      setActiveUserData(newState);\n      localStorage.removeItem(\"Acc_UserDetails\");\n      localStorage.setItem(\"Acc_UserDetails\", JSON.stringify(newState));\n    }\n  };\n\n  const retrivedUser = async () => {\n    let retrivedUserData = localStorage.getItem(\"Acc_UserDetails\");\n    if (!retrivedUserData) return;\n    let { walletAddress, contractAddresses } = JSON.parse(retrivedUserData);\n    ethereum.request({ method: \"eth_requestAccounts\" }).then((accounts) => {\n      if (walletAddress === accounts[0]) {\n        setActiveUserData({ walletAddress, contractAddresses });\n      } else {\n        forgetUserAccount();\n      }\n    });\n  };\n\n  const forgetUserAccount = async () => {\n    setActiveUserData(defaultActiveUserData);\n    setSelectedContract(defaultActiveContractData);\n    localStorage.removeItem(\"Acc_UserDetails\");\n  };\n\n  const createACContract = async () => {\n    setIsLoading(true);\n\n    let data = await AccountabilityContractFactory.methods\n      .createContract()\n      .send({\n        from: activeUserData.walletAddress,\n      })\n      .on(\"error\", function (error, receipt) {\n        setIsLoading(false);\n        console.error(\"error receipt\", receipt);\n      })\n      .then((results) => {\n        setIsLoading(false);\n        setSelectedContract(defaultActiveContractData);\n        return results;\n      });\n\n    if (data) {\n      const { transactionHash, events } = data;\n      return { transactionHash, events };\n    }\n  };\n\n  const getUserACContracts = async () => {\n    let foundContracts = await AccountabilityContractFactory.methods\n      .findMyContracts()\n      .call({\n        from: activeUserData.walletAddress,\n      });\n    if (foundContracts.length) {\n      let newState = {\n        ...activeUserData,\n        contractAddresses: [...foundContracts],\n      };\n      setActiveUserData(newState);\n      localStorage.removeItem(\"Acc_UserDetails\");\n      localStorage.setItem(\"Acc_UserDetails\", JSON.stringify(newState));\n    }\n  };\n\n  const setActiveACContractData = async (contractAddress) => {\n    if (!web3.utils.isAddress(contractAddress)) return;\n    let AccountabilityCheckerContract = new web3.eth.Contract(\n      AccountabilityCheckerABI,\n      contractAddress\n    );\n    if (!AccountabilityCheckerContract)\n      console.error(\"couldnt create contract instance\");\n    setSelectedContract({\n      ...selectedContract,\n      address: AccountabilityCheckerContract._address,\n      owner: await getContractOwner(AccountabilityCheckerContract),\n      nominatedAddress: await getNominee(AccountabilityCheckerContract),\n      isPromiseActive: await getIsPromiseActive(AccountabilityCheckerContract),\n      promiseDeadline: await getPromiseDeadline(AccountabilityCheckerContract),\n      checkOpen: await getCheckOpen(AccountabilityCheckerContract),\n      checkClose: await getCheckClose(AccountabilityCheckerContract),\n      instance: AccountabilityCheckerContract,\n    });\n  };\n\n  const setNominatedAccount = async (address) => {\n    setIsLoading(true);\n    const { instance: AccountabilityCheckerContract } = selectedContract;\n\n    let data = await AccountabilityCheckerContract.methods\n      .setNominee(address)\n      .send({\n        from: activeUserData.walletAddress,\n      })\n      .on(\"error\", function (error, receipt) {\n        setIsLoading(false);\n        console.error(\"error receipt\", receipt);\n      })\n      .then((results) => {\n        setIsLoading(false);\n        return results;\n      });\n\n    if (data) {\n      const { transactionHash, events } = data;\n      return { transactionHash, events };\n    }\n  };\n\n  const createPromise = async (transactionData) => {\n    const { instance: AccountabilityCheckerContract } = selectedContract;\n\n    setIsLoading(true);\n    const { commitments, dailyWager, deadline, totalPledgeAmount } =\n      transactionData;\n\n    let data = await AccountabilityCheckerContract.methods\n      .activatePromise(commitments, dailyWager, deadline)\n      .send({\n        from: activeUserData.walletAddress,\n        value: totalPledgeAmount,\n      })\n      .on(\"error\", function (error, receipt) {\n        setIsLoading(false);\n        console.error(\"error receipt\", receipt);\n      })\n      .then(async (results) => {\n        setIsLoading(false);\n        updatePromiseData();\n\n        return results;\n      });\n\n    if (data) {\n      const { transactionHash, events } = data;\n      console.log(events);\n      return { transactionHash, events };\n    }\n  };\n\n  const updatePromiseData = async () => {\n    const { instance: AccountabilityCheckerContract } = selectedContract;\n\n    setSelectedContract({\n      ...selectedContract,\n      isPromiseActive: await getIsPromiseActive(AccountabilityCheckerContract),\n      promiseDeadline: await getPromiseDeadline(AccountabilityCheckerContract),\n      checkOpen: await getCheckOpen(AccountabilityCheckerContract),\n      checkClose: await getCheckClose(AccountabilityCheckerContract),\n    });\n  };\n\n  const getPromisePrivateData = async () => {\n    const { instance: AccountabilityCheckerContract, isPromiseActive } =\n      selectedContract;\n\n    if (isPromiseActive) {\n      let response1 = await AccountabilityCheckerContract.methods\n        .getPromiseDetails()\n        .call({\n          from: activeUserData.walletAddress,\n        });\n\n      let response2 = await AccountabilityCheckerContract.methods\n        .getPotsDetails()\n        .call({\n          from: activeUserData.walletAddress,\n        });\n      if (response1 && response2) {\n        const { 2: checks_left, 5: commitmentsAsHex } = response1;\n        const { 0: pledgePot, 1: rewardPot, 2: penaltyPot } = response2;\n        let commitments = returnUTF8Array(commitmentsAsHex);\n\n        //this is because I didnt stop calculating check in time once there were zero checks left ffs\n        if (checks_left == 0) {\n          removeFinalCheckinTimes();\n        }\n\n        return { commitments, checks_left, pledgePot, rewardPot, penaltyPot };\n      } else {\n        console.error(\"there was a problem with this request\");\n      }\n    }\n  };\n  const removeFinalCheckinTimes = () => {\n    setSelectedContract({\n      ...selectedContract,\n      checkOpen: null,\n      checkClose: null,\n    });\n  };\n  const submitPromiseCheckIn = async (checkInResult) => {\n    setIsLoading(true);\n    const { instance: AccountabilityCheckerContract } = selectedContract;\n\n    let timeNow = dayjs().unix();\n\n    let data = await AccountabilityCheckerContract.methods\n      .checkCommitments(checkInResult, timeNow)\n      .send({\n        from: activeUserData.walletAddress,\n      })\n      .on(\"error\", function (error, receipt) {\n        setIsLoading(false);\n        console.error(\"error receipt\", receipt);\n      })\n      .then(async (results) => {\n        setIsLoading(false);\n        updatePromiseData();\n        console.log(results);\n        return results;\n      });\n\n    if (data) {\n      console.log(data);\n      const { transactionHash, events } = data;\n      return { transactionHash, events };\n    }\n  };\n\n  const cashoutPromise = async () => {\n    setIsLoading(true);\n    const { instance: AccountabilityCheckerContract } = selectedContract;\n\n    let data = await AccountabilityCheckerContract.methods\n      .cashOut()\n      .send({\n        from: activeUserData.walletAddress,\n      })\n      .on(\"error\", function (error, receipt) {\n        setIsLoading(false);\n        console.error(\"error receipt\", receipt);\n      })\n      .then(async (results) => {\n        setIsLoading(false);\n        updatePromiseData();\n        console.log(results);\n        return results;\n      });\n\n    if (data) {\n      const { transactionHash, events } = data;\n      return { transactionHash, events };\n    }\n  };\n\n  return (\n    <Web3Interface.Provider\n      value={{\n        userData: activeUserData,\n        contractData: selectedContract,\n        dAPPFunctions: {\n          getAccount: getUserAccount,\n          forgetAccount: forgetUserAccount,\n        },\n        contractFactoryFunctions: {\n          getContracts: getUserACContracts,\n          createContract: createACContract,\n        },\n        contractFunctions: {\n          selectContract: setActiveACContractData,\n          setNominee: setNominatedAccount,\n          createPromise,\n          submitCheckIn: submitPromiseCheckIn,\n          cashoutPromise,\n          getPromisePrivateData,\n        },\n        isLoading,\n      }}\n    >\n      {children}\n    </Web3Interface.Provider>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction RequirementsGate({ isValid, message, children, nohomepage }) {\n  return (\n    <>\n      {isValid ? (\n        <>{children}</>\n      ) : (\n        <div>\n          <h1>{message}</h1>\n          {!nohomepage && (\n            <Link to=\"/\" aria-disabled>\n              Return to Homepage\n            </Link>\n          )}\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default RequirementsGate;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Outlet } from \"react-router\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faRetweet,\n  faFileDownload,\n  faFile,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { Web3Interface } from \"../contexts/Web3Interface\";\nimport { Link } from \"react-router-dom\";\nimport { isValidNonEmptyAddress } from \"../utils/functions\";\nimport dayjs from \"dayjs\";\nimport localizedFormat from \"dayjs/plugin/localizedFormat\";\nimport RequirementsGate from \"../components/RequirementsGate\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\ndayjs.extend(localizedFormat);\n\nfunction Layout() {\n  let {\n    userData: { walletAddress, contractAddresses },\n    contractData,\n    dAPPFunctions: { getAccount, forgetAccount },\n    contractFactoryFunctions: { getContracts },\n    contractFunctions: { selectContract },\n  } = useContext(Web3Interface);\n  const [activeContractData, setActiveContractData] = useState({\n    address: null,\n    nominatedAddress: null,\n    isPromiseActive: null,\n    promiseDeadline: null,\n    checkOpen: null,\n    checkClose: null,\n  });\n  const [hasProvider, sethasProvider] = useState(true);\n\n  useEffect(() => {\n    checkForProvider();\n    setActiveContractData({\n      address: contractData.address,\n      nominatedAddress: contractData.nominatedAddress,\n      isPromiseActive: contractData.isPromiseActive,\n      promiseDeadline: contractData.promiseDeadline,\n      checkOpen: contractData.checkOpen,\n      checkClose: contractData.checkClose,\n    });\n  }, [contractData]);\n\n  let checkForProvider = async (params) => {\n    let provider = await detectEthereumProvider();\n    if (!provider) sethasProvider(false);\n  };\n  const {\n    address,\n    nominatedAddress,\n    isPromiseActive,\n    promiseDeadline,\n    checkOpen,\n    checkClose,\n  } = activeContractData;\n\n  return (\n    <RequirementsGate\n      nohomepage={true}\n      isValid={hasProvider}\n      message=\"No provider detected! Download like MetaMask one to get started\"\n    >\n      <div>\n        <header>\n          <h1>\n            <Link to=\"/\">\n              Accountabil-<span className=\"eth\">ETH</span>-y 🤞🏾\n            </Link>\n          </h1>\n          <div className=\"account-data\">\n            <div className=\"selected-contract-details\">\n              Active Contract Details\n              {!address ? (\n                <p>Please select a contract</p>\n              ) : (\n                <ul className=\"promise-timings\">\n                  <li>\n                    Nominee:{\" \"}\n                    {isValidNonEmptyAddress(nominatedAddress)\n                      ? nominatedAddress\n                      : \"None\"}\n                  </li>\n                  <li>Promise Active: {isPromiseActive ? \"true\" : \"false\"}</li>\n                  {isPromiseActive && (\n                    <>\n                      <li>\n                        Promise Deadline:{\" \"}\n                        {dayjs\n                          .unix(promiseDeadline)\n                          .format(\"MMM D, YYYY h:mm A\")}\n                      </li>\n                      <li>\n                        Daily Check In Open :\n                        {checkOpen\n                          ? dayjs.unix(checkOpen).format(\"MMM D, YYYY h:mm A\")\n                          : \"not applicable\"}\n                      </li>\n                      <li>\n                        Daily Check In Close :\n                        {checkClose\n                          ? dayjs.unix(checkClose).format(\"MMM D, YYYY h:mm A\")\n                          : \"not applicable\"}\n                      </li>\n                    </>\n                  )}\n                </ul>\n              )}\n            </div>\n            <div className=\"contract-wallet-details\">\n              <div className=\"user-wallet\">\n                Selected Wallet:\n                {walletAddress ? (\n                  <div>\n                    {walletAddress}\n                    <button onClick={forgetAccount}>Forget Me</button>\n                  </div>\n                ) : (\n                  <button onClick={getAccount}>Connect your account!</button>\n                )}\n              </div>\n              <div className=\"user-contractAddresses\">\n                <div>\n                  <FontAwesomeIcon icon={faFile} size=\"lg\" />\n                  Selected Contract: {address}\n                </div>\n                <label>\n                  Choose a contract (oldest to newest created)\n                  <select\n                    name=\"contractAddresses\"\n                    id=\"contractAddresses\"\n                    value={address || \"\"}\n                    disabled={!contractAddresses.length}\n                    onChange={(event) => selectContract(event.target.value)}\n                  >\n                    <option value=\"\" defaultValue hidden>\n                      {contractAddresses.length\n                        ? \"Please choose a contract\"\n                        : \"Retrive your contractAddresses to begin\"}\n                    </option>\n                    ) (\n                    {contractAddresses.map((contract, index) => (\n                      <option key={contract} value={contract}>\n                        [{index + 1}] {contract}\n                      </option>\n                    ))}\n                    )\n                  </select>\n                  <button onClick={getContracts} disabled={!walletAddress}>\n                    {contractAddresses.length ? (\n                      <FontAwesomeIcon icon={faRetweet} size=\"lg\" />\n                    ) : (\n                      <FontAwesomeIcon icon={faFileDownload} size=\"lg\" />\n                    )}\n                  </button>\n                </label>\n              </div>\n            </div>\n          </div>\n        </header>\n        <>\n          <Outlet />\n        </>\n      </div>\n    </RequirementsGate>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport { Bars } from \"react-loader-spinner\";\n\nfunction Loader() {\n  return (\n    <div className=\"loader-container\">\n      <Bars color=\"#ee811b\" height={100} width={100} />\n      <h2>Waiting Transaction Approval and Submission</h2>\n      <i>\n        (Don't forget to approve or reject the transaction on your provider\n        interface!)\n      </i>\n    </div>\n  );\n}\n\nexport default Loader;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction TransactionResultScreen({ data, success, children }) {\n  return (\n    <>\n      {success ? (\n        <div>\n          <h1>Success!</h1>\n          <p>Your request has gone through, please see the changes below</p>\n          <div>[Transaction stuff here]</div>\n          <Link to=\"/start\" aria-disabled>\n            Return to Start Page\n          </Link>\n        </div>\n      ) : (\n        <>{children}</>\n      )}\n    </>\n  );\n}\n\nexport default TransactionResultScreen;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Loader from \"../components/Loader\";\nimport RequirementsGate from \"../components/RequirementsGate\";\nimport TransactionResultScreen from \"../components/TransactionResultScreen\";\n\nimport { Web3Interface } from \"../contexts/Web3Interface\";\n\nfunction Cashout() {\n  let {\n    contractData: { isPromiseActive, address },\n    contractFunctions: { cashoutPromise },\n    isLoading,\n  } = useContext(Web3Interface);\n\n  const [isFunctionLoading, setIsFunctionLoading] = useState();\n  const [transactionData, setTransactionData] = useState();\n\n  useEffect(() => {\n    setIsFunctionLoading(isLoading);\n  }, [isLoading]);\n\n  let handleSubmit = async () => {\n    let data = await cashoutPromise();\n    if (data && !isFunctionLoading) {\n      setTransactionData(data);\n    } else {\n      console.error(\"I think something went wrong 3\");\n    }\n  };\n\n  return (\n    <main>\n      <RequirementsGate\n        isValid={address}\n        message=\"Please select a contract to begin or please create and then select one\"\n      >\n        <RequirementsGate\n          isValid={isPromiseActive}\n          message=\"This contract doesn't have an active promise! Please create one first \"\n        >\n          {isFunctionLoading && <Loader />}\n          <TransactionResultScreen\n            success={\n              transactionData &&\n              transactionData.events.cashOutSummary &&\n              !isFunctionLoading\n            }\n            data={transactionData}\n          >\n            {isFunctionLoading && <Loader />}\n            Click to cash out and close your promise\n            <button onClick={handleSubmit}>Request</button>\n          </TransactionResultScreen>\n        </RequirementsGate>\n      </RequirementsGate>\n    </main>\n  );\n}\n\nexport default Cashout;\n","import React, { useEffect, useState } from \"react\";\nimport { as2DecimalPlace } from \"../utils/functions\";\n\nfunction ExchangeRates({ amount }) {\n  const [fiatExhangeRates, setFiatExhangeRates] = useState();\n  let queryAmount = Number(amount);\n\n  useEffect(() => {\n    async function fetchExchangeRate() {\n      let response = await fetch(process.env.REACT_APP_EXCHANGE_RATES_ENDPOINT);\n      let {\n        data: {\n          rates: { GBP, USD, EUR },\n        },\n      } = await response.json();\n      setFiatExhangeRates({ GBP, USD, EUR });\n    }\n    fetchExchangeRate();\n  });\n\n  return (\n    <div>\n      {fiatExhangeRates && queryAmount >= 0 ? (\n        <details>\n          <summary>See the exchange rate to Fiat currencies</summary>\n          <div>\n            This amount is approximately equivalent to...\n            <div>GBP(£):{as2DecimalPlace(amount * fiatExhangeRates.GBP)} </div>\n            <div>USD($):{as2DecimalPlace(amount * fiatExhangeRates.USD)} </div>\n            <div>EUR(€): {as2DecimalPlace(amount * fiatExhangeRates.EUR)}</div>\n          </div>\n        </details>\n      ) : (\n        <p>Please enter a valid amount of ETH to begin 🤷💸</p>\n      )}\n    </div>\n  );\n}\n\nexport default ExchangeRates;\n","import React, { useEffect, useState } from \"react\";\nimport ExchangeRates from \"./ExchangeRates\";\nimport dayjs from \"dayjs\";\nimport localizedFormat from \"dayjs/plugin/localizedFormat\";\ndayjs.extend(localizedFormat);\n\nlet DateDropdown = () => {\n  let rows = [];\n  for (let index = 0; index < 30; index++) {\n    rows.push(\n      <option value={index + 1} key={\"day\" + index}>\n        {index + 1}\n      </option>\n    );\n  }\n  return rows;\n};\n\nfunction PromiseDefinitionForm({\n  handleSubmitForm,\n  handleUpdateData,\n  userPromiseData,\n  error,\n}) {\n  const [promiseTimingsFormatted, setPromiseTimingsFormatted] = useState({\n    timeNow: dayjs().format(\"LL\"),\n    calculatedDeadline: undefined,\n  });\n\n  useEffect(() => {\n    if (userPromiseData && userPromiseData.deadlineAsDaysAway) {\n      setPromiseTimingsFormatted({\n        ...promiseTimingsFormatted,\n        calculatedDeadline: dayjs()\n          .add(userPromiseData.deadlineAsDaysAway, \"day\")\n          .format(\"LL\"),\n      });\n    }\n  }, [userPromiseData]);\n\n  return (\n    <div>\n      <form onSubmit={handleSubmitForm}>\n        <label>\n          Commitments (please enter at least one)\n          {userPromiseData.userCommitments.map((commitment, index) => (\n            <input\n              key={`commit${index}`}\n              type=\"text\"\n              value={commitment}\n              onChange={(event) => {\n                let newData = userPromiseData.userCommitments;\n                newData.splice(index, 1, event.target.value);\n                handleUpdateData(newData, \"userCommitments\");\n              }}\n            />\n          ))}\n        </label>\n        <label>\n          Deadline\n          <div> Today is: {promiseTimingsFormatted.timeNow}</div>\n          <select\n            id=\"selectNumber\"\n            value={userPromiseData.deadlineAsDaysAway}\n            onChange={(event) => {\n              let newData = Number(event.target.value);\n              if (!newData) return;\n              handleUpdateData(newData, \"deadlineAsDaysAway\");\n            }}\n          >\n            {DateDropdown()}\n          </select>\n          Your Deadline is:\n          {promiseTimingsFormatted.calculatedDeadline}\n        </label>\n        <label>\n          <label>\n            Wager(ETH): This is equivalent to\n            <input\n              type=\"number\"\n              value={userPromiseData.dailyWager}\n              min={0}\n              step={0.0001}\n              onChange={(event) =>\n                handleUpdateData(Number(event.target.value), \"dailyWager\")\n              }\n            />\n            <ExchangeRates amount={userPromiseData.dailyWager} />\n          </label>\n          <div>\n            Total Pledge Pot:\n            <div>\n              {userPromiseData.dailyWager\n                ? `${userPromiseData.dailyWager}ETH `\n                : \"please set an amount \"}\n              x {userPromiseData.deadlineAsDaysAway} day(s) =\n              {Number(\n                userPromiseData.dailyWager * userPromiseData.deadlineAsDaysAway\n              ) ? (\n                ` ${\n                  userPromiseData.dailyWager *\n                  userPromiseData.deadlineAsDaysAway\n                } ETH`\n              ) : (\n                <p>Please fill out the missing info to get this total</p>\n              )}\n            </div>\n            <ExchangeRates\n              amount={\n                userPromiseData.dailyWager * userPromiseData.deadlineAsDaysAway\n              }\n            />\n          </div>\n        </label>\n        {error && (\n          <b>\n            There is an error with your submission! Please enter these details\n            correctly\n          </b>\n        )}\n        <input type=\"submit\" />\n      </form>\n    </div>\n  );\n}\n\nexport default PromiseDefinitionForm;\n","import Joi from \"joi\";\n\nexport const userResponseSchema = Joi.object({\n  userCommitments: Joi.array().items(Joi.string()).min(1).required(),\n  deadlineAsDaysAway: Joi.number().less(31).positive().required(),\n  dailyWager: Joi.number().greater(0).positive().required(),\n});\n\nexport const transactionArgumentSchema = Joi.object({\n  userCommitments: Joi.array().items(Joi.string().hex()),\n  deadline: Joi.number().positive(),\n  dailyWager: Joi.number().greater(0).positive(),\n  pledgePot: Joi.number(),\n});\n","import dayjs from \"dayjs\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport Loader from \"../components/Loader\";\nimport PromiseDefinitionForm from \"../components/PromiseDefinitionForm\";\nimport RequirementsGate from \"../components/RequirementsGate\";\nimport TransactionResultScreen from \"../components/TransactionResultScreen\";\nimport { Web3Interface } from \"../contexts/Web3Interface\";\nimport { returnHexArray } from \"../utils/functions\";\nimport { userResponseSchema } from \"../utils/Validation/PromiseDefintion\";\n\nlet web3 = new Web3(Web3.givenProvider);\nlet { toWei } = web3.utils;\n\nlet CreatePromise = () => {\n  let {\n    contractData: { address, isPromiseActive },\n    contractFunctions: { createPromise },\n    isLoading,\n  } = useContext(Web3Interface);\n\n  const [userPromise, setUserPromise] = useState({\n    userCommitments: new Array(3).fill(\"\"),\n    deadlineAsDaysAway: 1,\n    dailyWager: 0,\n  });\n  const [error, setError] = useState(false);\n  const [isFunctionLoading, setIsFunctionLoading] = useState();\n  const [transactionData, setTransactionData] = useState();\n\n  useEffect(() => {\n    setIsFunctionLoading(isLoading);\n  }, [isPromiseActive, isLoading]);\n\n  let handleUpdate = (data, property) => {\n    setUserPromise({\n      ...userPromise,\n      [property]: data,\n    });\n  };\n\n  let handleSubmit = async (event) => {\n    event.preventDefault();\n\n    let { error, value } = userResponseSchema.validate({\n      ...userPromise,\n      userCommitments: userPromise.userCommitments.filter(\n        (word) => word.length\n      ),\n    });\n\n    if (error) {\n      setError(true);\n      return;\n    } else {\n      setError(false);\n      let { userCommitments, dailyWager, deadlineAsDaysAway } = value;\n\n      let transactionArguments = {\n        commitments: returnHexArray(userCommitments),\n        dailyWager: toWei(dailyWager.toString()),\n        deadline: dayjs().add(deadlineAsDaysAway, \"day\").unix(),\n        totalPledgeAmount: toWei((dailyWager * deadlineAsDaysAway).toString()),\n      };\n\n      let data = await createPromise(transactionArguments);\n\n      if (data && !isFunctionLoading) {\n        setTransactionData(data);\n      } else {\n        console.error(\"I think something went wrong 4\");\n      }\n    }\n    // let newData = dayjs.unix(days).add(days, \"day\").unix();\n  };\n  return (\n    <main>\n      <RequirementsGate\n        isValid={address}\n        message=\"Please select a contract to begin or please create and then select one\"\n      >\n        <RequirementsGate\n          isValid={!isPromiseActive}\n          message=\"This contract has an active promise! Please let it reach its deadline and cashout to define a new one\"\n        >\n          <TransactionResultScreen\n            success={transactionData && !isFunctionLoading}\n            data={transactionData}\n          >\n            {isFunctionLoading && <Loader />}\n            <PromiseDefinitionForm\n              userPromiseData={userPromise}\n              handleSubmitForm={handleSubmit}\n              handleUpdateData={handleUpdate}\n              error={error}\n            />\n          </TransactionResultScreen>\n        </RequirementsGate>\n      </RequirementsGate>\n    </main>\n  );\n};\n\nexport default CreatePromise;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Loader from \"../components/Loader\";\nimport RequirementsGate from \"../components/RequirementsGate\";\nimport TransactionResultScreen from \"../components/TransactionResultScreen\";\nimport { Web3Interface } from \"../contexts/Web3Interface\";\n\nfunction CreateContract() {\n  let {\n    userData,\n    contractFactoryFunctions: { createContract, getContracts },\n    isLoading,\n  } = useContext(Web3Interface);\n\n  const [isFunctionLoading, setIsFunctionLoading] = useState();\n  const [transactionData, setTransactionData] = useState();\n\n  useEffect(() => {\n    setIsFunctionLoading(isLoading);\n  }, [isLoading]);\n\n  let handleSubmit = async () => {\n    let data = await createContract();\n    if (data && !isFunctionLoading) {\n      setTransactionData(data);\n      console.log(data);\n      getContracts();\n    } else {\n      console.error(\"I think something went wrong 3\");\n    }\n  };\n\n  return (\n    <main>\n      <RequirementsGate\n        isValid={!!userData.walletAddress}\n        message=\"Please connect your wallet to begin!\"\n      >\n        {isFunctionLoading && <Loader />}\n        <TransactionResultScreen\n          success={transactionData && !isFunctionLoading}\n          data={transactionData}\n        >\n          Click to create your and deploy your Accountabil-ETH-y Smart Contract\n          <button onClick={handleSubmit}>Request</button>\n        </TransactionResultScreen>{\" \"}\n      </RequirementsGate>\n    </main>\n  );\n}\n\nexport default CreateContract;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Start() {\n  return (\n    <div>\n      What do you want to do?\n      <div>\n        <Link to=\"/create-contract\" aria-disabled>\n          Create a New Contract\n        </Link>\n      </div>\n      or\n      <div>\n        <i> Connect a Accountability Checker contract to access these</i>\n        <ol>\n          <li>\n            <Link to=\"/my-promise/nominate\">Nominate an Address</Link>\n          </li>\n          <li>\n            <Link to=\"/my-promise/create\">Create Your Promise</Link>\n          </li>\n\n          <li>\n            <Link to=\"/my-promise/check-in\"> Daily Check In</Link>\n          </li>\n          <li>\n            <Link to=\"/my-promise/cashout\">Cashout Promise</Link>\n          </li>\n        </ol>\n      </div>\n    </div>\n  );\n}\n\nexport default Start;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport RequirementsGate from \"../components/RequirementsGate\";\nimport Loader from \"../components/Loader\";\nimport TransactionResultScreen from \"../components/TransactionResultScreen\";\nimport { Web3Interface } from \"../contexts/Web3Interface\";\nimport { isValidNonEmptyAddress } from \"../utils/functions\";\n\nfunction Nominate() {\n  const [newNominee, setNewNominee] = useState(\"\");\n  const [isTxnLoading, setIsTxnLoading] = useState();\n  const [transactionData, setTransactionData] = useState();\n  let {\n    contractData: { address, nominatedAddress, isPromiseActive },\n    contractFunctions: { setNominee },\n    isLoading,\n  } = useContext(Web3Interface);\n\n  useEffect(() => {\n    setNewNominee(null);\n    setIsTxnLoading(isLoading);\n  }, [address, isLoading]);\n\n  let handleTxnSubmit = async (event) => {\n    event.preventDefault();\n    if (isValidNonEmptyAddress(newNominee))\n      console.error(\"This isnt a valid address\");\n\n    let data = await setNominee(newNominee);\n    if (data && !isTxnLoading) {\n      setTransactionData(data);\n    } else {\n      console.error(\"I think something went wrong 5\");\n    }\n  };\n\n  return (\n    <main>\n      <RequirementsGate\n        isValid={address}\n        message=\"Please select a contract to begin or please create and then select one\"\n      >\n        <RequirementsGate\n          isValid={!isPromiseActive}\n          message=\"This contract has an active promise! Please let it expire and cashout to nominate a new address\"\n        >\n          <TransactionResultScreen\n            success={transactionData && !isTxnLoading}\n            data={transactionData}\n          >\n            {isTxnLoading && <Loader />}\n            <div className=\"\">\n              <h1> Set your Nominee!</h1>\n              <p>\n                Please provide a ETH account that will recieve the amount in\n                your penalty pot.\n                <br />\n                You cannot nominate:\n              </p>\n              <ul>\n                <li> Your currently connected wallet</li>\n                <li> This promise contract</li>\n              </ul>\n\n              <form onSubmit={handleTxnSubmit}>\n                <p>\n                  Your current nominated address is:\n                  <b>\n                    {isValidNonEmptyAddress(nominatedAddress) ? (\n                      <span>{nominatedAddress}</span>\n                    ) : (\n                      <span>\n                        NONE! Please set one before you set up your promise\n                      </span>\n                    )}\n                  </b>\n                </p>\n                <label>\n                  Set your new nominee to recieve your penalty pot\n                  <input\n                    type=\"text\"\n                    name=\"newNominee\"\n                    required\n                    value={newNominee}\n                    onChange={(event) => setNewNominee(event.target.value)}\n                    disabled={isTxnLoading}\n                  />\n                </label>\n                <input type=\"submit\" disabled={isTxnLoading} />\n              </form>\n            </div>\n          </TransactionResultScreen>\n        </RequirementsGate>\n      </RequirementsGate>\n    </main>\n  );\n}\n\nexport default Nominate;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArchive } from \"@fortawesome/free-solid-svg-icons\";\nimport Web3 from \"web3\";\n\nlet web3 = new Web3(Web3.givenProvider);\nlet { fromWei } = web3.utils;\n\nfunction PotTotals({ pots }) {\n  return (\n    <div>\n      <h2>Current Pot Totals</h2>\n      <div className=\"promisePots\">\n        {pots &&\n          pots.map((pot) => {\n            return (\n              <span key={Object.keys(pot)}>\n                <div>{fromWei(Object.values(pot)[0])} ETH</div>\n                <FontAwesomeIcon icon={faArchive} size=\"4x\" color=\"#a6c3dd9e\" />\n                <div>{Object.keys(pot)}</div>\n              </span>\n            );\n          })}\n      </div>\n    </div>\n  );\n}\n\nexport default PotTotals;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport Loader from \"../components/Loader\";\nimport PotTotals from \"../components/PotTotals\";\nimport RequirementsGate from \"../components/RequirementsGate\";\nimport TransactionResultScreen from \"../components/TransactionResultScreen\";\nimport { Web3Interface } from \"../contexts/Web3Interface\";\n\nconst defaultPromiseData = {\n  commitments: [],\n  pledgePot: null,\n  rewardPot: null,\n  penaltyPot: null,\n};\n\nfunction CheckIn() {\n  const [userResponse, setUserResponse] = useState(new Array(3).fill(false));\n  const [promisePrivateData, setPromisePrivateData] =\n    useState(defaultPromiseData);\n  const [isTxnLoading, setIsTxnLoading] = useState();\n  const [transactionData, setTransactionData] = useState();\n\n  let {\n    contractData: { address, isPromiseActive },\n    contractFunctions: {\n      getPromisePrivateData: _getPromisePrivateData,\n      submitCheckIn,\n    },\n    isLoading,\n  } = useContext(Web3Interface);\n\n  useEffect(() => {\n    getPrivatePromiseData();\n    setIsTxnLoading(isLoading);\n  }, [address, isLoading]);\n\n  const getPrivatePromiseData = async () => {\n    let data = await _getPromisePrivateData();\n    if (data) {\n      let { commitments, checks_left, ...rest } = data;\n      let pots = Object.entries(rest).map((e) => ({ [e[0]]: e[1] }));\n      setPromisePrivateData({\n        ...promisePrivateData,\n        commitments,\n        checksLeft: checks_left,\n        pots,\n      });\n    } else {\n      console.error(\"I think something went wrong 1\");\n    }\n  };\n\n  const handleUpdate = (value, index) => {\n    let newData = userResponse;\n    newData.splice(index, 1, value);\n    setUserResponse(newData);\n  };\n\n  let handleTxnSubmit = async (event) => {\n    event.preventDefault();\n    let hasCompletedAll = userResponse.every((answer) => answer);\n    let data = await submitCheckIn(hasCompletedAll);\n\n    if (data && !isTxnLoading) {\n      setTransactionData(data);\n    } else {\n      console.error(\"I think something went wrong 2\");\n    }\n  };\n\n  return (\n    <RequirementsGate\n      isValid={!!address}\n      message=\"Please select a contract to begin or please create and then select one\"\n    >\n      <RequirementsGate\n        isValid={isPromiseActive}\n        message=\"This contract doesn't have an active promise! Please create one first \"\n      >\n        <TransactionResultScreen\n          success={transactionData && !isTxnLoading}\n          data={transactionData}\n        >\n          {isTxnLoading && <Loader />}\n          <main>\n            <h1> Submit Check</h1>\n\n            <PotTotals pots={promisePrivateData.pots} />\n            <form onSubmit={handleTxnSubmit}>\n              <h2>\n                Have you done what you promised? 👇 (\n                {promisePrivateData.checksLeft} Checks Left)\n              </h2>\n              <div className=\"commitment-container\">\n                {promisePrivateData.commitments.map((commitment, index) => (\n                  <span className=\"commitment\" key={`commitment${index + 1}`}>\n                    <input\n                      type=\"checkbox\"\n                      id={commitment}\n                      value={true}\n                      onChange={(event) =>\n                        handleUpdate(event.target.checked, index)\n                      }\n                    />\n                    <label htmlFor={commitment}> {commitment}</label>\n                  </span>\n                ))}\n              </div>\n              <input type=\"submit\" disabled={isTxnLoading} />\n            </form>\n          </main>\n        </TransactionResultScreen>\n      </RequirementsGate>\n    </RequirementsGate>\n  );\n}\n\nexport default CheckIn;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction NotFound() {\n  return (\n    <div>\n      Sorry this page was not found. Do you want go back to the\n      <Link to=\"/\" aria-disabled>\n        application homepage?\n      </Link>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import { Route, Routes } from \"react-router-dom\";\nimport {\n  Layout,\n  Start,\n  CreatePromise,\n  Nominate,\n  CreateContract,\n  CheckIn,\n  Cashout,\n  NotFound,\n} from \"./pages\";\nimport { Web3InterfaceProvider } from \"./contexts/Web3Interface/\";\nimport \"./styles/index.scss\";\n\nfunction App() {\n  return (\n    <Web3InterfaceProvider>\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route index element={<Start />} />\n          <Route path=\"create-contract\" element={<CreateContract />} />\n          <Route path=\"my-promise\">\n            <Route exact path=\"create\" element={<CreatePromise />} />\n            <Route exact path=\"nominate\" element={<Nominate />} />\n            <Route exact path=\"check-in\" element={<CheckIn />} />\n            <Route exact path=\"cashout\" element={<Cashout />} />\n            <Route index element={<NotFound />} />\n          </Route>\n        </Route>\n        <Route path=\"*\" element={<NotFound />} />\n      </Routes>\n    </Web3InterfaceProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Routes\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"dotenv/config\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}