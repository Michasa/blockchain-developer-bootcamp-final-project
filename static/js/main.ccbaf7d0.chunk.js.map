{"version":3,"sources":["smart-contract/contracts.js","smart-contract/abi/AccountabilityCheckerFactory.js","contexts/MetaMaskInterface.js","pages/_layout.js","pages/Cashout.js","utils/functions.js","components/ExchangeRates.js","components/PromiseDefinitionForm.js","pages/DefinePromise.js","pages/CreateContract.js","pages/Start.js","pages/Nominate.js","pages/CheckIn.js","Routes.js","reportWebVitals.js","index.js"],"names":["web3","Web3","givenProvider","eth","Contract","inputs","internalType","name","type","stateMutability","anonymous","indexed","outputs","constant","process","ACCOUNTABILITY_CHECKER_FACTORY_ADDRESS","MetaMaskInterface","createContext","MetaMaskInterfaceProvider","children","useState","activeUserAccount","setActiveUserAccount","useEffect","retrivedUser","localStorage","getItem","getUserAccount","a","window","ethereum","request","method","accounts","setItem","logoutAccount","Provider","value","user","getAccount","forgetAccount","Layout","useContext","className","onClick","id","Cashout","as2DecimalPlace","amount","Math","round","toFixed","ExchangeRates","fiatExhangeRates","setFiatExhangeRates","queryAmount","Number","fetch","response","json","data","rates","GBP","USD","EUR","fetchExchangeRate","localizedFormat","require","dayjs","extend","DateDropdown","rows","index","push","PromiseDefinitionForm","handleSubmitForm","handleUpdateData","userPromiseData","timeNow","format","calculatedDeadline","undefined","promiseTimingsFormatted","setPromiseTimingsFormatted","deadlineAsDaysAway","add","onSubmit","userCommitments","map","commitment","onChange","event","newData","splice","target","dailyWager","required","min","step","DefinePromise","userPromise","setUserPromise","preventDefault","console","log","property","CreateContract","Start","to","Nominate","newNominee","setNewNominee","CheckIn","Array","fill","userResponse","seuserResponse","hasCompletedAll","every","answer","handleUpdate","checked","for","App","path","element","style","padding","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ccbaf7d0.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nimport { AccountabilityCheckerABI } from \"./abi/AccountabilityChecker\";\nimport { AccountabilityCheckerFactoryABI } from \"./abi/AccountabilityCheckerFactory\";\n\nlet web3 = new Web3(Web3.givenProvider);\n\nexport const AccountabilityContractFactory = new web3.eth.Contract(\n  AccountabilityCheckerFactoryABI,\n  process.env.ACCOUNTABILITY_CHECKER_FACTORY_ADDRESS\n);\n\nexport const createUserAccountabilityContract = (userAddress) => {\n  return new web3.eth.Contract(AccountabilityCheckerABI, userAddress);\n};\n","export const AccountabilityCheckerFactoryABI = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"deployed_contract\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"log\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"contract_address\",\n        type: \"address\",\n      },\n    ],\n    name: \"newContractCreated\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"contracts_deployed\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    constant: true,\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    constant: true,\n  },\n  {\n    inputs: [],\n    name: \"createContract\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"findMyContracts\",\n    outputs: [\n      {\n        internalType: \"address[]\",\n        name: \"\",\n        type: \"address[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n    constant: true,\n  },\n];\n","import React, { createContext, useState, useEffect } from \"react\";\nimport {\n  AccountabilityContractFactory,\n  createUserAccountabilityContract,\n} from \"../smart-contract/contracts\";\n\nexport const MetaMaskInterface = createContext();\n\nexport const MetaMaskInterfaceProvider = ({ children }) => {\n  const [activeUserAccount, setActiveUserAccount] = useState();\n\n  useEffect(() => {\n    let retrivedUser = localStorage.getItem(\"currentUser\");\n    if (retrivedUser) {\n      setActiveUserAccount(retrivedUser);\n    } else {\n      setActiveUserAccount(null);\n    }\n  }, []);\n\n  let getUserAccount = async () => {\n    const accounts = await window.ethereum.request({\n      method: \"eth_requestAccounts\",\n    });\n    if (accounts) {\n      setActiveUserAccount(accounts[0]);\n      localStorage.setItem(\"currentUser\", accounts[0]);\n    }\n  };\n\n  let logoutAccount = async () => {\n    setActiveUserAccount(null);\n  };\n\n  return (\n    <MetaMaskInterface.Provider\n      value={{\n        user: activeUserAccount,\n        getAccount: getUserAccount,\n        forgetAccount: logoutAccount,\n      }}\n    >\n      {children}\n    </MetaMaskInterface.Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Outlet } from \"react-router\";\n\nimport { MetaMaskInterface } from \"../contexts/MetaMaskInterface\";\n// import ProviderRequiredRestriction from \"../components/ProviderRestricted\";\n\nfunction Layout() {\n  let { user, getAccount, forgetAccount } = useContext(MetaMaskInterface);\n\n  return (\n    // <ProviderRequiredRestriction>\n    <div>\n      <header>\n        <h1>Accountabil-ETH-y 🤞🏾</h1>\n        <div className=\"account-data\">\n          <div>\n            user:\n            {user ? (\n              <div>\n                {user} <button onClick={forgetAccount}>Log Out</button>\n              </div>\n            ) : (\n              <button onClick={getAccount}>Connect your account!</button>\n            )}\n          </div>\n          <div>\n            load contract:\n            <select name=\"contracts\" id=\"contracts\">\n              <option value=\"volvo\">Account 1</option>\n              <option value=\"saab\">Account 2</option>\n            </select>\n          </div>\n        </div>\n      </header>\n      <div>\n        <Outlet />\n      </div>\n    </div>\n    // </ProviderRequiredRestriction>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\n\nfunction Cashout() {\n  return (\n    <div>\n      Click here to cash out and close your promise!\n      <button>Request</button>\n    </div>\n  );\n}\n\nexport default Cashout;\n","export const as2DecimalPlace = (amount) => {\n  return (Math.round(amount * 100) / 100).toFixed(2);\n};\n","import React, { useEffect, useState } from \"react\";\nimport { as2DecimalPlace } from \"../utils/functions\";\n\nfunction ExchangeRates({ amount }) {\n  const [fiatExhangeRates, setFiatExhangeRates] = useState();\n  let queryAmount = Number(amount);\n\n  useEffect(() => {\n    async function fetchExchangeRate() {\n      let response = await fetch(\n        \"https://api.coinbase.com/v2/exchange-rates?currency=ETH\"\n      );\n      let {\n        data: {\n          rates: { GBP, USD, EUR },\n        },\n      } = await response.json();\n      setFiatExhangeRates({ GBP, USD, EUR });\n    }\n    fetchExchangeRate();\n  });\n\n  return (\n    <div>\n      {fiatExhangeRates && queryAmount >= 0 ? (\n        <details>\n          <summary>See the exchange rate to Fiat currencies</summary>\n          <div>\n            This amount is approximately equivalent to...\n            <div>GBP(£):{as2DecimalPlace(amount * fiatExhangeRates.GBP)} </div>\n            <div>USD($):{as2DecimalPlace(amount * fiatExhangeRates.USD)} </div>\n            <div>EUR($): {as2DecimalPlace(amount * fiatExhangeRates.EUR)}</div>\n          </div>\n        </details>\n      ) : (\n        <p>Please enter a valid amount of ETH to begin 🤷💸</p>\n      )}\n    </div>\n  );\n}\n\nexport default ExchangeRates;\n","import React, { useEffect, useState } from \"react\";\nimport ExchangeRates from \"./ExchangeRates\";\nimport dayjs from \"dayjs\";\nlet localizedFormat = require(\"dayjs/plugin/localizedFormat\");\ndayjs.extend(localizedFormat);\n\nlet DateDropdown = () => {\n  let rows = [];\n  for (let index = 0; index < 30; index++) {\n    rows.push(\n      <option value={index + 1} key={\"day\" + index}>\n        {index + 1}\n      </option>\n    );\n  }\n  return rows;\n};\n\nfunction PromiseDefinitionForm({\n  handleSubmitForm,\n  handleUpdateData,\n  userPromiseData,\n}) {\n  const [promiseTimingsFormatted, setPromiseTimingsFormatted] = useState({\n    timeNow: dayjs().format(\"LL\"),\n    calculatedDeadline: undefined,\n  });\n\n  useEffect(() => {\n    if (userPromiseData && userPromiseData.deadlineAsDaysAway) {\n      setPromiseTimingsFormatted({\n        ...promiseTimingsFormatted,\n        calculatedDeadline: dayjs()\n          .add(userPromiseData.deadlineAsDaysAway, \"day\")\n          .format(\"LL\"),\n      });\n    }\n  }, [userPromiseData]);\n\n  // let { timeNow, calculatedDeadline } = promiseTimingsFormatted;\n\n  return (\n    <div>\n      <form onSubmit={handleSubmitForm}>\n        <label>\n          Commitments\n          {userPromiseData.userCommitments.map((commitment, index) => (\n            <input\n              key={`commit${index}`}\n              type=\"text\"\n              value={commitment}\n              onChange={(event) => {\n                let newData = userPromiseData.userCommitments;\n                newData.splice(index, 1, event.target.value);\n                handleUpdateData(newData, \"userCommitments\");\n              }}\n            />\n          ))}\n        </label>\n        <label>\n          Deadline\n          <div> Today is: {promiseTimingsFormatted.timeNow}</div>\n          <select\n            id=\"selectNumber\"\n            value={userPromiseData.deadlineAsDaysAway}\n            onChange={(event) => {\n              let newData = Number(event.target.value);\n              if (!newData) return;\n              handleUpdateData(newData, \"deadlineAsDaysAway\");\n            }}\n          >\n            {DateDropdown()}\n          </select>\n          Your Deadline is:\n          {promiseTimingsFormatted.calculatedDeadline}\n        </label>\n        <label>\n          <label>\n            Wager(ETH): This is equivalent to{\" \"}\n            <input\n              type=\"number\"\n              value={userPromiseData.dailyWager}\n              required\n              min={0}\n              step={0.0001}\n              onChange={(event) =>\n                handleUpdateData(event.target.value, \"dailyWager\")\n              }\n            />{\" \"}\n            <ExchangeRates amount={userPromiseData.dailyWager} />\n          </label>\n          <div>\n            Total Pledge Pot:\n            <div>\n              {userPromiseData.dailyWager\n                ? `${userPromiseData.dailyWager}ETH `\n                : \"please set an amount \"}\n              x {userPromiseData.deadlineAsDaysAway} day(s) =\n              {Number(\n                userPromiseData.dailyWager * userPromiseData.deadlineAsDaysAway\n              ) ? (\n                ` ${\n                  userPromiseData.dailyWager *\n                  userPromiseData.deadlineAsDaysAway\n                } ETH`\n              ) : (\n                <p>Please fill out the missing info to get this total</p>\n              )}\n            </div>\n            <ExchangeRates\n              amount={\n                userPromiseData.dailyWager * userPromiseData.deadlineAsDaysAway\n              }\n            />\n          </div>\n        </label>\n        <input type=\"submit\" />\n      </form>\n    </div>\n  );\n}\n\nexport default PromiseDefinitionForm;\n","import React, { useState } from \"react\";\nimport PromiseDefinitionForm from \"../components/PromiseDefinitionForm\";\n\nlet DefinePromise = () => {\n  const [userPromise, setUserPromise] = useState({\n    userCommitments: [\"\", \"\", \"\"],\n    deadlineAsDaysAway: 1,\n    dailyWager: 0,\n  });\n\n  let handleUpdate = (data, property) => {\n    setUserPromise({\n      ...userPromise,\n      [property]: data,\n    });\n  };\n\n  let handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(userPromise);\n    // let newData = dayjs.unix(days).add(days, \"day\").unix();\n  };\n\n  return (\n    <PromiseDefinitionForm\n      userPromiseData={userPromise}\n      handleSubmitForm={handleSubmit}\n      handleUpdateData={handleUpdate}\n    />\n  );\n};\n\nexport default DefinePromise;\n","import React from \"react\";\n\nfunction CreateContract() {\n  return (\n    <div>\n      Click to create your and deploy your Accountabil-ETH-y Smart Contract\n      <button>Request</button>\n    </div>\n  );\n}\n\nexport default CreateContract;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Start() {\n  return (\n    <div>\n      What do you want to do?\n      <div>\n        <Link to=\"/create-contract\" aria-disabled>\n          Create\n        </Link>\n      </div>\n      or\n      <div>\n        <i> Connect a Accountability Checker contract to access these</i>\n        <Link to=\"/my-promise/create\">Create Your Promise</Link>\n        <Link to=\"/my-promise/nominate\">Nominate an Address</Link>\n        <Link to=\"/my-promise/check-in\"> Daily Check In</Link>\n        <Link to=\"/my-promise/cashout\">Cashout Promise</Link>\n      </div>\n      {/* <Link to=\"/my-promise/submit\">Submit</Link>\n      <Link to=\"/my-promise/cashout\">Cashout</Link> */}\n    </div>\n  );\n}\n\nexport default Start;\n","import React, { useState } from \"react\";\n\nfunction Nominate() {\n  const [newNominee, setNewNominee] = useState();\n\n  let handleSubmit = (event) => {\n    event.preventDefault();\n    //check if this is a proper address and all that\n    console.log(newNominee);\n    // let newData = dayjs.unix(days).add(days, \"day\").unix();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Set your new nominee to recieve your penalty pot\n        <input\n          type=\"text\"\n          name=\"newNominee\"\n          required\n          onChange={(event) => setNewNominee(event.target.value)}\n        />\n      </label>\n      <input type=\"submit\" />\n    </form>\n  );\n}\n\nexport default Nominate;\n","import React, { useState } from \"react\";\n\nfunction CheckIn() {\n  const [userResponse, seuserResponse] = useState(new Array(3).fill(false));\n\n  const handleUpdate = (value, index) => {\n    let newData = userResponse;\n    newData.splice(index, 1, value);\n    seuserResponse(newData);\n  };\n\n  let handleSubmit = (event) => {\n    event.preventDefault();\n    let hasCompletedAll = userResponse.every((answer) => answer);\n    console.log(userResponse, hasCompletedAll);\n    // let newData = dayjs.unix(days).add(days, \"day\").unix();\n  };\n\n  return (\n    <div>\n      <h1> Submit Check</h1>\n      <div>Dates + Other info</div>\n      <form onSubmit={handleSubmit}>\n        {[\"Promise1\", \"Promise2\", \"Promise3\"].map((commitment, index) => (\n          <span key={`commitment${index + 1}`}>\n            <input\n              type=\"checkbox\"\n              id={commitment}\n              value={true}\n              onChange={(event) => handleUpdate(event.target.checked, index)}\n            />\n            <label for={commitment}> {commitment}</label>\n          </span>\n        ))}\n        <input type=\"submit\" />\n      </form>\n      {/* <div> Checklist</div>\n      Dates Infomation Checklist of todos\n      <button>submit</button> */}\n    </div>\n  );\n}\n\nexport default CheckIn;\n","import { Route, Routes } from \"react-router-dom\";\nimport {\n  Layout,\n  Start,\n  DefinePromise,\n  Nominate,\n  CreateContract,\n  CheckIn,\n  Cashout,\n} from \"./pages\";\nimport { MetaMaskInterfaceProvider } from \"./contexts/MetaMaskInterface.js\";\nimport \"./styles/index.scss\";\n\nfunction App() {\n  return (\n    <MetaMaskInterfaceProvider>\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route index path=\"start\" element={<Start />} />\n          <Route path=\"create-contract\" element={<CreateContract />} />\n          <Route path=\"my-promise\">\n            <Route path=\"create\" element={<DefinePromise />} />\n            <Route path=\"nominate\" element={<Nominate />} />\n            <Route path=\"check-in\" element={<CheckIn />} />\n            <Route path=\"cashout\" element={<Cashout />} />\n          </Route>\n        </Route>\n        <Route\n          path=\"*\"\n          element={\n            <main style={{ padding: \"1rem\" }}>\n              <p>404 not found</p>\n            </main>\n          }\n        />\n      </Routes>\n    </MetaMaskInterfaceProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Routes\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"dotenv/config\";\n\nif (module.hot) {\n  module.hot.accept();\n}\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}